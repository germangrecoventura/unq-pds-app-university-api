plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id("org.jetbrains.kotlin.plugin.jpa") version "1.7.10"
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id "org.jetbrains.kotlin.plugin.noarg" version "1.7.10"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.7.10"
    id 'war'
    id "jacoco"
    id "org.sonarqube" version "3.5.0.2730"
}

group 'org.app-universidad'
version '1.0-SNAPSHOT'

sourceCompatibility = 17

repositories {
    mavenCentral()
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.10'

    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'io.kotlintest', name: 'kotlintest-runner-junit4', version: '3.4.2'

    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'

    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("com.h2database:h2")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation('org.hibernate:hibernate-validator:8.0.0.Final')
    implementation("org.springdoc:springdoc-openapi-ui:1.6.15")
    implementation("org.springframework.boot:spring-boot-starter-security:3.0.5")
    implementation("io.jsonwebtoken:jjwt:0.9.1")
    implementation("com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5")
    implementation("org.springframework.boot:spring-boot-starter-actuator:3.1.0")
    implementation 'org.modelmapper:modelmapper:3.1.1'
    implementation('ch.qos.logback:logback-core:1.4.6')
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'

}
sonarqube {
    properties {
        property "sonar.projectKey", "germangrecoventura_unq-pds-app-university-api"
        property "sonar.organization", "germangrecoventura"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.kotlin.compiler.version", "1.7.22"
        property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir\\reports\\jacoco\\test\\jacocoTestReport.xml"
        property "sonar.coverage.exclusions", "src/main/kotlin/unq/pds/api/dtos/**," +
                "src/main/kotlin/unq/pds/services/builder/**," +
                "src/main/kotlin/unq/pds/api/controller/DeployInstanceController.kt," +
                "src/main/kotlin/unq/pds/services/impl/AdminServiceImpl.kt," +
                "src/main/kotlin/unq/pds/model/User.kt," +
                "src/main/kotlin/unq/pds/model/builder/**," +
                "src/main/kotlin/unq/pds/security/**," +
                "src/main/kotlin/unq/pds/api/controller/ControllerHelper.kt"
        property "sonar.cpd.exclusions", "src/main/kotlin/unq/pds/api/controller/**," +
                "src/main/kotlin/unq/pds/security/**," +
                "src/main/kotlin/unq/pds/model/Teacher.kt," +
                "src/main/kotlin/unq/pds/model/Student.kt," +
                "src/main/kotlin/unq/pds/model/Admin.kt"
    }
}

jacoco {
    toolVersion = "0.8.8"
}

tasks.jacocoTestReport {
    reports {
        xml.required.set(true)
        csv.required.set(false)
        html.required.set(false)
    }
}


compileKotlin {
    kotlinOptions.jvmTarget = "17"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}

test {
    useJUnitPlatform()
}

test {
    if (System.getenv("DISABLED_TEST")) {
        exclude '**/*'
    }
}